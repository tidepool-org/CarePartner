# fastlane/Fastfile
default_platform :ios

# In CircleCI, we encode the app store connect api key as base64
# because CircleCI does not handle multi-line environment variabiles
# https://support.circleci.com/hc/en-us/articles/360046094254-Using-Multiple-Line-newline-Environment-Variables-in-CircleCI
# cat AuthKey_77H29HSX8R.p8| base64

APP_STORE_CONNECT_ISSUER = ENV["APP_STORE_CONNECT_ISSUER"]
APP_STORE_CONNECT_KEY_ID = ENV["APP_STORE_CONNECT_KEY_ID"]
APP_STORE_CONNECT_KEY = Base64.decode64(ENV["APP_STORE_CONNECT_KEY_ENCODED"])

api_key = app_store_connect_api_key(
  key_id: "#{APP_STORE_CONNECT_KEY_ID}",
  issuer_id: "#{APP_STORE_CONNECT_ISSUER}",
  key_content: "#{APP_STORE_CONNECT_KEY}"
)


platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Ad-hoc build"
  lane :adhoc do
    match(type: "adhoc")
    gym(export_method: "ad-hoc")
  end
end

lane :sync_certs do
  sync_code_signing(
    type: "appstore",
    app_identifier: "org.tidepool.carepartner",
    git_url: "https://github.com/tidepool-org/match_certificates",
    git_branch: "main",
    api_key: api_key
  )
end

lane :release do

  match(
    type: "appstore",
    git_url: "https://github.com/tidepool-org/match_certificates",
    app_identifier: "org.tidepool.carepartner",
    git_branch: "main",
    readonly: true
  )

  build_ios_app(
    export_method: "app-store",
    scheme: "CarePartner",
    output_name: "CarePartner.ipa",
    clean: true,
    output_directory: "output",
    configuration: "Release",
    destination: 'generic/platform=iOS',
    xcodebuild_formatter: ''
  )

  upload_to_testflight(
    api_key: api_key,
    skip_submission: false,
    ipa: "output/CarePartner.ipa",
    skip_waiting_for_build_processing: true,
  )

  #pilot(api_key: api_key)
end
